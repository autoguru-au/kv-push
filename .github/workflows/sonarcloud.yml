name: SonarQube Analysis (C#)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    name: Analyze with SonarCloud
    runs-on: ubuntu-latest

    steps:
      # Checkout completo del repositorio
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Configuración de .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      # Instalar herramientas necesarias
      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.2.12

      # Restaurar dependencias
      - name: Restore dependencies
        run: dotnet restore

      # Ejecutar pruebas y generar cobertura
      - name: Run tests with coverage
        run: |
          dotnet test \
            --settings ./coverlet.runsettings \
            --collect:"XPlat Code Coverage" \
            --results-directory ./TestResults

      # Verificar archivos generados después de las pruebas
      - name: List files in TestResults
        run: ls -R ./TestResults

      # Generar reporte de cobertura
      - name: Generate coverage report
        run: |
          reportgenerator \
            -reports:./TestResults/**/coverage.cobertura.xml \
            -targetdir:./TestResults/CoverageResults \
            -reporttypes:cobertura

      # Verificar existencia del archivo de cobertura
      - name: Verify coverage file
        run: ls ./TestResults/CoverageResults/coverage.cobertura.xml

      # Ejecutar análisis con SonarCloud
      - name: Run SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin \
            /k:"autoguru-au_kv-push" \
            /o:"autoguru-au" \
            /d:sonar.cs.opencover.reportsPaths="./TestResults/CoverageResults/coverage.cobertura.xml" \
            /d:sonar.scanner.skipJreProvisioning=true \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          dotnet build
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
